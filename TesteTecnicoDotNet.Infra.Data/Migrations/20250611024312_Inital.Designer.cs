// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteTecnicoDotNet.Infra.Data.Context;

#nullable disable

namespace TesteTecnicoDotNet.Infra.Data.Migrations
{
    [DbContext(typeof(CreditoDbContext))]
    [Migration("20250611024312_Inital")]
    partial class Inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteTecnicoDotNet.Business.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("TesteTecnicoDotNet.Business.Models.Financiamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataUltimoVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoCredito")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorInicialFinanciamento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Financiamento");
                });

            modelBuilder.Entity("TesteTecnicoDotNet.Business.Models.Parcela", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinanciamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FinanciamentoId");

                    b.ToTable("Parcela");
                });

            modelBuilder.Entity("TesteTecnicoDotNet.Business.Models.Financiamento", b =>
                {
                    b.HasOne("TesteTecnicoDotNet.Business.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TesteTecnicoDotNet.Business.Models.Parcela", b =>
                {
                    b.HasOne("TesteTecnicoDotNet.Business.Models.Financiamento", "Financiamento")
                        .WithMany("Parcelas")
                        .HasForeignKey("FinanciamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Financiamento");
                });

            modelBuilder.Entity("TesteTecnicoDotNet.Business.Models.Financiamento", b =>
                {
                    b.Navigation("Parcelas");
                });
#pragma warning restore 612, 618
        }
    }
}
